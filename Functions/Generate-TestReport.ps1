Function Generate-TestReport {
    $modPath = Get-Module Shellformance
    $PathResult = Join-Path $modPath.ModuleBase  "Results"
    $ReportsOnlyFiles = Get-ChildItem $PathResult '*-Results-*'
    $OutFPPath = Join-Path $modPath.ModuleBase  "HTML"
    $OutPath = Join-Path $OutFPPath "index.html"
    $ThisFrag = ""
    $Null = Try{invoke-command { [System.Web.HttpUtility]} -ea stop }Catch{Add-type System.Web}
    if (! (test-path $OutFPPath) ){
        $null = New-Item -Type Directory $OutFPPath
    }
    $template = @{PreContent = "<P>Generated by ShellFormance</P>" ; PostContent = "<P>Work in progress.</P>"}
    $ThisFrag += "<P>Generated by ShellFormance</P>"
    foreach($file in $ReportsOnlyFiles){
        $csvSummary = Import-csv $file
        $wholefile = Join-Path (split-path $file -parent) ( ( split-path -leaf $file ) -replace '-Results' )
        $CSVWhole = Import-CSV $wholefile
        $FP = [regex]::replace( (split-path -leaf $wholefile ),'csv$','html' )
        $FPName = $fp -replace '\.html'
        $ThisFP = Join-Path $OutFPPath $FP

        $ThisFrag += ( ( $csvSummary | ConvertTo-HTML -As Table -Fragment -PreContent "<br/><H2><a href='$(join-path "." $fp)'>Full report $FPName</a></H2>" ) )
        $ps1 = split-path -leaf ($file.FullName -replace '-Results.*$','.ps1')
        $MoreInfo = "<P>For more information about the functions - <a href='..\PerformanceTests\$ps1'>$ps1</a></P>"
        $CSVWhole | ConvertTo-HTML -Title "Results of $(split-path -leaf $wholefile)" -as Table -cssUri "./basic.css" -PreContent "<P>Generated by ShellFormance</P><br/><H2>Full report $FPName (Sorted on Time/Avg.time)</H2>" -postContent ($MoreInfo + $template.PostContent ) | out-file -force $ThisFP
    }
    $html = ConvertTo-html -Title "Test summary" -Body $ThisFrag -postContent $template.PostContent  -cssUri "./basic.css" #| Out-File -force $OutPath
    [System.Web.HttpUtility]::HtmlDecode($html) | Out-File $OutPath
}
Export-ModuleMember -function Generate-TestReport